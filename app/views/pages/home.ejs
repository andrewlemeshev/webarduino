<% layout('../layout') -%>
<div class="list-group menu">
  <a href="#" class="list-group-item disabled">
    cvwdmkvownnvdw
  </a>
  <a href="#" class="list-group-item">
    dwvvwvwvwvvdvwv
  </a>
</div>
<div id="panel" class="panel"></div>
<script type="text/javascript">
$( document ).ready(function() {
  function Pins(pinName, pinType, pinX, pinY, pinOut, pinIn) {
    this.pinName;
    this.pinType;
    this.pinX;
    this.pinY;
    this.pinOut;
    this.pinIn;
  }

  function ArduinoElement(name, type, pinCount, pins, statement) {
    this.name = name;
    this.type = type;
    this.pinCount = pinCount;
    this.pins = pins;
    this.statement = statement;
    this.that = this;
  }

  var responceJson;
  console.log("ready");
  $.ajax({
    url: 'http://localhost:3000/getjson',
    method: 'POST',
    data: 'done',
    dataType: 'html'
  }).done(function (msg) {
    console.log('success');
    responceJson = JSON.parse(msg);//, function(k, v) {
      //console.log("k: "+k+" v: "+v);
    //});
    console.log(responceJson);
    var firstMeet = false;
    var arduinoElement = [];
    var appendArduino = '<a href="#" class="list-group-item disabled">Arduino</a>';
    var appendComponent = '<a href="#" class="list-group-item disabled">Components</a>'
    var arr = Object.keys(responceJson).map(function(k, v) {  return responceJson[k] });//console.log(k);console.log(v);

    for (var i = 0; i < arr.length; i++) {
      var pin = new Pins();// = new Pins[arr[i].pinCount];
      var pins = [];
      var j=0;
      Object.keys(arr[i].pinNamesAndTypes).map(function(k, v) {
        pin.pinName = k;
        pin.pinType = v;
        pin.pinX = arr[i].pinXs[j];
        pin.pinY = arr[i].pinYs[j];
        pins.push(pin);
        j++;
      });
      //for (var j = 0; j < arr[i].pinCount; j++) {

      //}
      arduinoElement.push(new ArduinoElement(arr[i].name, arr[i].type, arr[i].pinCount, pins, arr[i].statement));
      var menuName = arr[i].name==arr[i].type?(arr[i].name):(arr[i].name+' '+arr[i].type);
      if (arr[i].name == 'Arduino') appendArduino = appendArduino + '<a href="#" class="list-group-item" data="'+i+'">'
            + arr[i].name + ' ' + arr[i].type + '<img src="images/' + arr[i].statement.default + '"></a>';
      else appendComponent = appendComponent + '<a href="#" class="list-group-item" data="'+i+'">'
            + menuName + '<p><img src="images/' + arr[i].statement.default + '"></p></a>';
    }

    $(".menu").html(appendArduino+appendComponent);
    //var height = window.screen.availHeight * 0.9;
    //var width = window.screen.availWidth * 0.9;
    var style = {
      width: window.screen.availWidth * 0.85,
      height: window.screen.availHeight * 0.8
    }
    $("#panel").css(style);
    myPanel = new jsgl.Panel(document.getElementById("panel"));

    $("a.list-group-item").filter(function(index) {
      return $(this).attr("class") != "disabled";
    }).on("click", function() {
      console.log(this);
      var myImage = myPanel.createImage();
      myImage.setUrl("images/" + arduinoElement[$(this).attr("data")].statement.default);
      myImage.setHorizontalAnchor(jsgl.HorizontalAnchor.CENTER);
      myImage.setVerticalAnchor(jsgl.VerticalAnchor.MIDDLE);
      //myImage.setSizeWH(200, 200);
      //myImage.setLocationXY(style.width/2+myImage.getWidth()/2, style.height/2+myImage.getHeight()/2);
      console.log(myImage.getWidth());
      //if (arduinoElement[$(this).attr("data")].name != 'Arduino') myImage.setSizeWH()
      myPanel.addElement(myImage);
      myImage.setLocationXY(style.width/2, style.height/2);
      console.log(myImage.getWidth());
      arduinoElement[$(this).attr("data")].imageOnPanel = myImage;
      
    })
    //var element = {

    //};

    /*var source;

    var taked = function(eventArgs) {
      source = eventArgs.getSourceElement();
      //if (eventArgs.getEventType() == jsgl.MouseEvent.MOVE)
        source.setCenterLocationXY(eventArgs.getX(), eventArgs.getY());
      label.setText("Clicked");
    }

    var moving = function(eventArgs) {
      if (source != null) source.setLocationXY(eventArgs.getX(), eventArgs.getY());
      circle.setCenterLocationXY(eventArgs.getX(), eventArgs.getY());
      label.setText("Moving: "+eventArgs.getX() + "" + eventArgs.getY());
    }

    var mouseUp = function(eventArgs) {
      source = null;
      //if (eventArgs.getEventType() == jsgl.MouseEvent.MOVE)
      //  source.setLocationXY(eventArgs.getX(), eventArgs.getY());
      label.setText("Not clicked");
    }

    var func = function(eventArgs) {
      var text;
      switch(eventArgs.getEventType()) {
        case jsgl.MouseEvent.CLICK:
          source = null;
          text = "click: ";
          break;
        case jsgl.MouseEvent.DOWN:
          source = eventArgs.getSourceElement();
          text = "down: ";
          break;
        case jsgl.MouseEvent.MOVE:
          if (source != null) {
            if (source instanceof jsgl.elements.CircleElement) source.setCenterLocationXY(eventArgs.getX(), eventArgs.getY());
            else if (source instanceof jsgl.elements.LabelElement) source.setLocationXY(eventArgs.getX(), eventArgs.getY());
          }
          text = "move: ";
          break;
        case jsgl.MouseEvent.OUT:
          source = null;
          text = "out: ";
          break;
      }
      label.setText(text+eventArgs.getX() + " " + eventArgs.getY());
    }

    circle.addMouseDownListener(func);
    circle.addMouseMoveListener(func);
    circle.addMouseOutListener(func);
    circle.addClickListener(func);
    label.addMouseDownListener(func);
    label.addMouseMoveListener(func);
    label.addMouseOutListener(func);
    label.addClickListener(func);*/
    //myPanel.addMouseDownListener(taked);
    //myPanel.addMouseMoveListener(moving);
    //myPanel.addClickListener(mouseUp);
    //circle.addClickListener(mouseUp);
    //polygon.addClickListener(mouseUp);
    //label.addClickListener(mouseUp);
    /*var handler = function(eventArgs) {
    var text;
    switch(eventArgs.getEventType()) {
      case jsgl.MouseEvent.CLICK:
        circle.setCenterLocationXY(eventArgs.getX(), eventArgs.getY());
        break;
      case jsgl.MouseEvent.DOWN:
        circle.setCenterLocationXY(eventArgs.getX(), eventArgs.getY());
        break;
    }
    label.setText(text + " (" + eventArgs.getX() + "," + eventArgs.getY() + ")");
  }*/
  });
});
</script>
